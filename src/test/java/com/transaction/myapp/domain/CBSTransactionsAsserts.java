package com.transaction.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CBSTransactionsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCBSTransactionsAllPropertiesEquals(CBSTransactions expected, CBSTransactions actual) {
        assertCBSTransactionsAutoGeneratedPropertiesEquals(expected, actual);
        assertCBSTransactionsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCBSTransactionsAllUpdatablePropertiesEquals(CBSTransactions expected, CBSTransactions actual) {
        assertCBSTransactionsUpdatableFieldsEquals(expected, actual);
        assertCBSTransactionsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCBSTransactionsAutoGeneratedPropertiesEquals(CBSTransactions expected, CBSTransactions actual) {
        assertThat(actual)
            .as("Verify CBSTransactions auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCBSTransactionsUpdatableFieldsEquals(CBSTransactions expected, CBSTransactions actual) {
        assertThat(actual)
            .as("Verify CBSTransactions relevant properties")
            .satisfies(a -> assertThat(a.getMessageid()).as("check messageid").isEqualTo(expected.getMessageid()))
            .satisfies(a -> assertThat(a.getChannelcode()).as("check channelcode").isEqualTo(expected.getChannelcode()))
            .satisfies(a -> assertThat(a.getMessagetype()).as("check messagetype").isEqualTo(expected.getMessagetype()))
            .satisfies(a -> assertThat(a.getTranscurrency()).as("check transcurrency").isEqualTo(expected.getTranscurrency()))
            .satisfies(a -> assertThat(a.getDebtorsname()).as("check debtorsname").isEqualTo(expected.getDebtorsname()))
            .satisfies(a -> assertThat(a.getDebtorsaccountid()).as("check debtorsaccountid").isEqualTo(expected.getDebtorsaccountid()))
            .satisfies(a -> assertThat(a.getDebtorsphone()).as("check debtorsphone").isEqualTo(expected.getDebtorsphone()))
            .satisfies(a -> assertThat(a.getCreditorsname()).as("check creditorsname").isEqualTo(expected.getCreditorsname()))
            .satisfies(a -> assertThat(a.getCreditorsaccountid()).as("check creditorsaccountid").isEqualTo(expected.getCreditorsaccountid())
            )
            .satisfies(a -> assertThat(a.getCreditorsphone()).as("check creditorsphone").isEqualTo(expected.getCreditorsphone()))
            .satisfies(a -> assertThat(a.getNarration()).as("check narration").isEqualTo(expected.getNarration()))
            .satisfies(a -> assertThat(a.getExternalreference()).as("check externalreference").isEqualTo(expected.getExternalreference()))
            .satisfies(a -> assertThat(a.getCbsreference()).as("check cbsreference").isEqualTo(expected.getCbsreference()))
            .satisfies(a -> assertThat(a.getCbsstatus()).as("check cbsstatus").isEqualTo(expected.getCbsstatus()))
            .satisfies(a -> assertThat(a.getCbsstatusdesc()).as("check cbsstatusdesc").isEqualTo(expected.getCbsstatusdesc()))
            .satisfies(a -> assertThat(a.getRequestInstanttime()).as("check requestInstanttime").isEqualTo(expected.getRequestInstanttime())
            )
            .satisfies(a -> assertThat(a.getRequestjson()).as("check requestjson").isEqualTo(expected.getRequestjson()))
            .satisfies(a -> assertThat(a.getCbsrequestxml()).as("check cbsrequestxml").isEqualTo(expected.getCbsrequestxml()))
            .satisfies(a -> assertThat(a.getCbsresponsexml()).as("check cbsresponsexml").isEqualTo(expected.getCbsresponsexml()))
            .satisfies(a -> assertThat(a.getAmount()).as("check amount").isEqualTo(expected.getAmount()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCBSTransactionsUpdatableRelationshipsEquals(CBSTransactions expected, CBSTransactions actual) {
        // empty method
    }
}
